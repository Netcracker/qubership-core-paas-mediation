---
kind: Deployment
apiVersion: apps/v1
metadata:
    name: "{{ .Values.SERVICE_NAME }}"
    labels:
      name: '{{ .Values.SERVICE_NAME }}'
      app.kubernetes.io/name: '{{ .Values.SERVICE_NAME }}'
      app.kubernetes.io/instance: '{{ cat .Values.SERVICE_NAME "-" .Values.NAMESPACE | nospace | trunc 63 | trimSuffix "-" }}'
      app.kubernetes.io/version: '{{ .Values.ARTIFACT_DESCRIPTOR_VERSION }}'
      app.kubernetes.io/component: 'backend'
      app.kubernetes.io/part-of: 'Cloud-Core'
      app.kubernetes.io/managed-by: 'saasDeployer'
      app.kubernetes.io/technology: 'go'
      deployment.qubership.org/sessionId: '{{ .Values.DEPLOYMENT_SESSION_ID }}'
    annotations:
        qubership.cloud/start.stage: '1'
spec:
    selector:
        matchLabels:
          name: '{{ .Values.SERVICE_NAME }}'
    replicas: {{ .Values.REPLICAS | default 1 }}
    revisionHistoryLimit: 3
    strategy:
    {{- if eq (default "" .Values.DEPLOYMENT_STRATEGY_TYPE) "recreate" }}
      type: Recreate
    {{- else if eq (default "" .Values.DEPLOYMENT_STRATEGY_TYPE) "best_effort_controlled_rollout" }}
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 80%
    {{- else if eq (default "" .Values.DEPLOYMENT_STRATEGY_TYPE) "ramped_slow_rollout" }}
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    {{- else if eq (default "" .Values.DEPLOYMENT_STRATEGY_TYPE) "custom_rollout" }}
      type: RollingUpdate
      rollingUpdate:
        maxSurge: {{ .Values.DEPLOYMENT_STRATEGY_MAXSURGE | default "25%" }}
        maxUnavailable: {{ .Values.DEPLOYMENT_STRATEGY_MAXUNAVAILABLE | default "25%" }}
    {{- else }}
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    {{- end }}
    template:
        metadata:
            labels:
              name: '{{ .Values.SERVICE_NAME }}'
              app.kubernetes.io/name: '{{ .Values.SERVICE_NAME }}'
              app.kubernetes.io/instance: '{{ cat .Values.SERVICE_NAME "-" .Values.NAMESPACE | nospace | trunc 63 | trimSuffix "-" }}'
              app.kubernetes.io/version: '{{ .Values.ARTIFACT_DESCRIPTOR_VERSION }}'
              app.kubernetes.io/component: 'backend'
              app.kubernetes.io/part-of: 'Cloud-Core'
              app.kubernetes.io/managed-by: 'saasDeployer'
              app.kubernetes.io/technology: 'go'
        spec:
            serviceAccountName: "{{ .Values.SERVICE_NAME }}"
            containers:
                - name: "{{ .Values.SERVICE_NAME }}"
                  image: "{{ .Values.IMAGE_REPOSITORY }}:{{ .Values.TAG }}"
                  args:
                      - '/app/paas-mediation'
                  ports:
                      - name: web
                        containerPort: 8080
                        protocol: TCP
                      - name: tls
                        containerPort: 8443
                        protocol: TCP
                  env:
                      - name: MICROSERVICE_NAMESPACE
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.namespace
                      - name: LOG_LEVEL
                        value: "{{ lower .Values.LOG_LEVEL }}"
                      - name: PAAS_PLATFORM
                        value: "{{ .Values.PAAS_PLATFORM }}"
                      - name: TRACING_ENABLED
                        value: '{{ .Values.TRACING_ENABLED }}'
                      - name: TRACING_HOST
                        value: '{{ .Values.TRACING_HOST }}'
                      - name: TRACING_SAMPLER_RATELIMITING
                        value: '{{ .Values.TRACING_SAMPLER_RATELIMITING }}'
                      - name: DEPRECATED_API_DISABLED
                        value: '{{ .Values.DISABLE_DEPRECATED_API }}'
                      - name: CONSUL_ENABLED
                        value: '{{ .Values.CONSUL_ENABLED }}'
                      - name: CONSUL_URL
                        value: '{{ .Values.CONSUL_URL }}'
                      - name: MEMORY_LIMIT
                        valueFrom:
                          resourceFieldRef:
                            containerName: "{{ .Values.SERVICE_NAME }}"
                            resource: limits.memory
                  resources:
                      requests:
                          cpu: "{{ .Values.CPU_REQUEST}}"
                          memory: "{{ .Values.MEMORY_LIMIT}}"
                      limits:
                          memory: "{{ .Values.MEMORY_LIMIT}}"
                          cpu: "{{ .Values.CPU_LIMIT }}"
                  livenessProbe:
                      httpGet:
                          path: /health
                          port: web
                          scheme: HTTP
                      initialDelaySeconds: {{ .Values.paasMediation.livenessProbe.initialDelaySeconds }}
                      timeoutSeconds: {{ .Values.paasMediation.livenessProbe.timeoutSeconds }}
                  readinessProbe:
                      httpGet:
                          path: /health
                          port: web
                          scheme: HTTP
                      initialDelaySeconds: {{ .Values.paasMediation.readinessProbe.initialDelaySeconds }}
                      timeoutSeconds: {{ .Values.paasMediation.readinessProbe.timeoutSeconds }}
                  securityContext:
{{ if eq .Values.PAAS_PLATFORM "KUBERNETES" }}
                      runAsGroup: 10001
{{ end }}
                      runAsNonRoot: true
                      seccompProfile:
                          type: RuntimeDefault
                      allowPrivilegeEscalation: false
                      capabilities:
                          drop:
                            - ALL
                      readOnlyRootFilesystem: {{ and .Values.READONLY_CONTAINER_FILE_SYSTEM_ENABLED (eq .Values.PAAS_PLATFORM "KUBERNETES") }}
            topologySpreadConstraints:
{{- if .Values.CLOUD_TOPOLOGIES }}
{{- range $v := .Values.CLOUD_TOPOLOGIES }}
              - topologyKey: {{ $v.topologyKey }}
                maxSkew: {{ $v.maxSkew | default 1 }}
                whenUnsatisfiable: {{ $v.whenUnsatisfiable | default "ScheduleAnyway" }}
                labelSelector:
                  matchLabels:
                    name: "{{ $.Values.SERVICE_NAME }}"
{{- end }}
{{- else }}
              - maxSkew: 1
                topologyKey: "{{ .Values.CLOUD_TOPOLOGY_KEY }}"
                whenUnsatisfiable: ScheduleAnyway
                labelSelector:
                  matchLabels:
                    name: "{{ .Values.SERVICE_NAME }}"
{{- end }}
